{
  "uid" : "84afa82cf2371505",
  "name" : "test_remindMatterList[casedata0]",
  "fullName" : "testCase.test_remindMatterList.Test_remindMatterList#test_remindMatterList",
  "historyId" : "221ecc6e1817138a417f86b90380675f",
  "time" : {
    "start" : 1652169577890,
    "stop" : 1652169577934,
    "duration" : 44
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'errMsg'",
  "statusTrace" : "self = <test_remindMatterList.Test_remindMatterList object at 0x1037c4a30>\ncasedata = {'channel': 'PC', 'description': '验证pc端事项列表是否正常', 'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJib2IiLCJleHAiOjE2NTIxNzEzNTksInVzZXJJZCI6ImZhbmd3MSJ9.5PLrITVXvPmEwojptOHeHBbC-HsODmCngsm-0ZLuWzM', 'veryfi': {'errMsg': 'success'}}\n\n    @allure.story(\"获取事项列表\")\n    @pytest.mark.parametrize('casedata', yaml.safe_load(open(\"data/remindMatterList_data.yaml\")))\n    def test_remindMatterList(self,casedata):\n        self.casedata = casedata\n        casedata.update(self.token)\n        self.data = CommonTemplate().template(\"api/remindMatterList.yaml\", self.casedata)\n        self.r = self.getResponse(self.data)\n        # 获取用例标题和测试用例描述\n        description = casedata.get(\"description\")\n        uri = Handle_yaml(\"api/remindMatterList.yaml\").get_uri()\n        try:\n            expected_errMsg = self.casedata.get(\"veryfi\").get(\"errMsg\")\n>           assert (self.r.json()[\"errMsg\"] == expected_errMsg)\nE           KeyError: 'errMsg'\n\ntestCase/test_remindMatterList.py:26: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_xunit_setup_method_fixture_Test_remindMatterList",
    "time" : {
      "start" : 1652169577888,
      "stop" : 1652169577889,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'errMsg'",
    "statusTrace" : "self = <test_remindMatterList.Test_remindMatterList object at 0x1037c4a30>\ncasedata = {'channel': 'PC', 'description': '验证pc端事项列表是否正常', 'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJib2IiLCJleHAiOjE2NTIxNzEzNTksInVzZXJJZCI6ImZhbmd3MSJ9.5PLrITVXvPmEwojptOHeHBbC-HsODmCngsm-0ZLuWzM', 'veryfi': {'errMsg': 'success'}}\n\n    @allure.story(\"获取事项列表\")\n    @pytest.mark.parametrize('casedata', yaml.safe_load(open(\"data/remindMatterList_data.yaml\")))\n    def test_remindMatterList(self,casedata):\n        self.casedata = casedata\n        casedata.update(self.token)\n        self.data = CommonTemplate().template(\"api/remindMatterList.yaml\", self.casedata)\n        self.r = self.getResponse(self.data)\n        # 获取用例标题和测试用例描述\n        description = casedata.get(\"description\")\n        uri = Handle_yaml(\"api/remindMatterList.yaml\").get_uri()\n        try:\n            expected_errMsg = self.casedata.get(\"veryfi\").get(\"errMsg\")\n>           assert (self.r.json()[\"errMsg\"] == expected_errMsg)\nE           KeyError: 'errMsg'\n\ntestCase/test_remindMatterList.py:26: KeyError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "355d88de2a68e20",
      "name" : "stdout",
      "source" : "355d88de2a68e20.txt",
      "type" : "text/plain",
      "size" : 26
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_xunit_setup_method_fixture_Test_remindMatterList::0",
    "time" : {
      "start" : 1652169577940,
      "stop" : 1652169577940,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "提醒事项模块"
  }, {
    "name" : "story",
    "value" : "获取事项列表"
  }, {
    "name" : "parentSuite",
    "value" : "testCase"
  }, {
    "name" : "suite",
    "value" : "test_remindMatterList"
  }, {
    "name" : "subSuite",
    "value" : "Test_remindMatterList"
  }, {
    "name" : "host",
    "value" : "kongdeMacBook-Air.local"
  }, {
    "name" : "thread",
    "value" : "5409-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testCase.test_remindMatterList"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "casedata",
    "value" : "{'channel': 'PC', 'veryfi': {'errMsg': 'success'}, 'description': '验证pc端事项列表是否正常'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "84afa82cf2371505.json",
  "parameterValues" : [ "{'channel': 'PC', 'veryfi': {'errMsg': 'success'}, 'description': '验证pc端事项列表是否正常'}" ]
}